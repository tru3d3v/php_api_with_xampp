version: '3'

#networks:
#  dev:

services:
  
  mysql_latihan:
    image: mysql:8.0
    env_file:
      - ./master/mysql_master.env
    container_name: "mysql_latihan"
    restart: "no"
    ports:
      - 9806:3306
    volumes:
      - ./master/conf/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
      - ./master/data:/var/lib/mysql
  apache:
    build:
      context: ./apache
      dockerfile: apache.dockerfile
    hostname: 'apache.container'
    container_name: 'apache'
    volumes: 
      - ./www:/var/www/html/
    environment: 
      - PROJECT_DIR=/var/www/html
    ports: 
      - 80:80
    depends_on:
      - php_fpm
    #networks:
    #  - dev

  php_fpm:
    build:
      context: ./php-fpm
      dockerfile: php.dockerfile
    hostname: 'fpm.container'
    container_name: 'fpm'
    volumes: 
      - ./www:/var/www/html/
    ports:
      - 9000:9000
    depends_on: 
      - redis
    #networks:
    #  - dev

  redis:
    image: redis:6.0-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: 'redis.container'
    container_name: 'redis'
    ports:
      - 6379:6379
    #networks:
    #  - dev

  # creating a service for npm, this will allow us
  # to run npm commands on the docker setup
  # the entrypoint config tells this container that
  # whenever it is called it should run that command
  # we will pass whatever options are needed from outside
  npm:
    image: node:12-alpine
    container_name: npm
    volumes:
      - ./www:/var/www/html/
    working_dir: /var/www/html/latihan
    entrypoint: ['npm']
    